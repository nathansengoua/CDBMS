/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package finaldefenseproject01;

import com.formdev.flatlaf.FlatLightLaf;
import java.awt.*;
import java.awt.event.ItemEvent;
import java.awt.image.BufferedImage;
import java.io.File;
import java.io.FileInputStream;
import java.sql.*;
import java.util.ArrayList;
import java.util.Date;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.ImageIcon;
import javax.swing.JFileChooser;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.JTable;
import javax.swing.UIManager;
import javax.swing.UnsupportedLookAndFeelException;
import javax.swing.filechooser.FileNameExtensionFilter;
import javax.swing.table.DefaultTableModel;
import org.apache.poi.xssf.usermodel.*;
import org.jfree.chart.ChartFactory;
import org.jfree.chart.ChartPanel;
import org.jfree.chart.JFreeChart;
import org.jfree.data.category.DefaultCategoryDataset;

//import java.sql.*;
/**
 *
 * @author SENGOUA NATHAN
 */
public class startup extends javax.swing.JFrame {
   private BufferedImage originalImage;
   private int acessstate=0;
    /**
     * Creates new form startup
     */
    public startup() {
        initComponents();
       String pah="/icons/Homebg.jpg";
       // fitshowimage(swapimagelabel,pah);
       EX_DisplayExportTable();
       IM_DisplayExportTable();
       admins();
       //ReportPieChart();
       
        
    }
    

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        Displayreport = new javax.swing.JDialog();
        jPanel6 = new javax.swing.JPanel();
        ReportDBM db = new ReportDBM();
        exportreportyear2 = new javax.swing.JComboBox<>();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        Displayreportbtn = new javax.swing.JButton();
        exMonthChooser2 = new com.toedter.calendar.JMonthChooser();
        manageaccount = new javax.swing.JFrame();
        jTabbedPane2 = new javax.swing.JTabbedPane();
        jPanel3 = new javax.swing.JPanel();
        jLabel11 = new javax.swing.JLabel();
        updateuser = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        accounttable = new javax.swing.JTable();
        adduser = new javax.swing.JButton();
        deleteuser = new javax.swing.JButton();
        fullaccessbtn = new javax.swing.JButton();
        revokeacessbtn = new javax.swing.JButton();
        userrefreshtable = new javax.swing.JButton();
        jPanel5 = new javax.swing.JPanel();
        jLabel12 = new javax.swing.JLabel();
        jButton9 = new javax.swing.JButton();
        jButton10 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        addusers = new javax.swing.JFrame();
        jPanel7 = new javax.swing.JPanel();
        jLabel13 = new javax.swing.JLabel();
        usert1 = new javax.swing.JTextField();
        jButton11 = new javax.swing.JButton();
        jLabel14 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        usert2 = new javax.swing.JTextField();
        fullaccess = new javax.swing.JCheckBox();
        modifyusers = new javax.swing.JFrame();
        jPanel8 = new javax.swing.JPanel();
        jLabel16 = new javax.swing.JLabel();
        usert3 = new javax.swing.JTextField();
        jButton12 = new javax.swing.JButton();
        jLabel17 = new javax.swing.JLabel();
        jLabel18 = new javax.swing.JLabel();
        usert4 = new javax.swing.JTextField();
        fullaccess1 = new javax.swing.JCheckBox();
        startupTabbedPane = new javax.swing.JTabbedPane();
        bgPanel = new javax.swing.JPanel();
        jPanel1 = new javax.swing.JPanel();
        jLabel5 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        swapimagelabel = new javax.swing.JLabel();
        Importpane = new javax.swing.JPanel();
        IM_toolbox = new javax.swing.JPanel();
        addimports = new javax.swing.JButton();
        IM_importdbbtn = new javax.swing.JButton();
        IM_exportdbbtn = new javax.swing.JButton();
        IM_editrowbtn = new javax.swing.JButton();
        IM_searchbtn = new javax.swing.JButton();
        IM_sortbtn = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        IM_mainbg = new javax.swing.JPanel();
        IM_searchbg = new javax.swing.JPanel();
        IM_existsearch = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        jTextField2 = new javax.swing.JTextField();
        jComboBox2 = new javax.swing.JComboBox<>();
        IM_tablebg = new javax.swing.JPanel();
        importdb = new javax.swing.JScrollPane();
        importtb = new javax.swing.JTable();
        IM_sortpane = new javax.swing.JPanel();
        Exportpane = new javax.swing.JPanel();
        EX_toolbox = new javax.swing.JPanel();
        addexports = new javax.swing.JButton();
        EX_importdbbtn = new javax.swing.JButton();
        EX_exportdbbtn = new javax.swing.JButton();
        EX_editrowbtn = new javax.swing.JButton();
        EX_searchbtn = new javax.swing.JButton();
        EX_deletebtn = new javax.swing.JButton();
        EX_searchbtn1 = new javax.swing.JButton();
        EX_mainbg = new javax.swing.JPanel();
        EX_searchbg = new javax.swing.JPanel();
        EX_existsearch = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        searchtf1 = new javax.swing.JTextField();
        jComboBox1 = new javax.swing.JComboBox<>();
        jButton1 = new javax.swing.JButton();
        EX_tablebg = new javax.swing.JPanel();
        exportdb = new javax.swing.JScrollPane();
        exporttb = new javax.swing.JTable();
        EX_sortpane = new javax.swing.JPanel();
        Reportpane = new javax.swing.JPanel();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel2 = new javax.swing.JPanel();
        jPanel4 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        importreportyear = new javax.swing.JComboBox<>();
        jLabel3 = new javax.swing.JLabel();
        jComboBox3 = new javax.swing.JComboBox<>();
        exreportpane = new javax.swing.JPanel();
        exportchartpane = new javax.swing.JPanel();
        jScrollPane3 = new javax.swing.JScrollPane();
        exreporttable = new javax.swing.JTable();
        selectreporttodisplay = new javax.swing.JButton();
        jMenuBar1 = new javax.swing.JMenuBar();
        accountbtn = new javax.swing.JMenu();
        manageaccountbtn = new javax.swing.JMenuItem();
        logoutbtn = new javax.swing.JMenuItem();
        adminstatus = new javax.swing.JMenu();
        jMenu1 = new javax.swing.JMenu();
        jMenuItem1 = new javax.swing.JMenuItem();
        jMenu2 = new javax.swing.JMenu();

        Displayreport.setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        Displayreport.setTitle("Choose Report To Show");
        Displayreport.setModalityType(java.awt.Dialog.ModalityType.APPLICATION_MODAL);
        Displayreport.setResizable(false);
        Displayreport.setSize(new java.awt.Dimension(313, 258));
        Displayreport.setType(java.awt.Window.Type.POPUP);

        jPanel6.setBackground(new java.awt.Color(255, 255, 255));

        ArrayList<String> records4 = db.retrieveyears();

        // Populate the JComboBox with the retrieved records
        for (String record : records4) {
            exportreportyear2.addItem(record);
        }
        db.close();

        jLabel6.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(255, 0, 51));
        jLabel6.setText("REPORT YEAR / MONTH");

        jLabel7.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(0, 51, 255));
        jLabel7.setText("DISPLAY REPORT");

        Displayreportbtn.setBackground(new java.awt.Color(0, 51, 255));
        Displayreportbtn.setFont(new java.awt.Font("Times New Roman", 1, 12)); // NOI18N
        Displayreportbtn.setForeground(new java.awt.Color(255, 255, 255));
        Displayreportbtn.setText("DISPLAY");
        Displayreportbtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DisplayreportbtnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel6Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel7)
                .addGap(71, 71, 71))
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addGap(63, 63, 63)
                        .addComponent(Displayreportbtn, javax.swing.GroupLayout.PREFERRED_SIZE, 158, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addGap(17, 17, 17)
                        .addComponent(jLabel6)
                        .addGap(18, 18, 18)
                        .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(exMonthChooser2, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(exportreportyear2, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(23, Short.MAX_VALUE))
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addGap(29, 29, 29)
                .addComponent(jLabel7)
                .addGap(18, 18, 18)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addGap(3, 3, 3)
                        .addComponent(jLabel6))
                    .addComponent(exportreportyear2, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(exMonthChooser2, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(Displayreportbtn, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(38, Short.MAX_VALUE))
        );

        Displayreport.getContentPane().add(jPanel6, java.awt.BorderLayout.CENTER);

        Displayreport.getAccessibleContext().setAccessibleParent(this);

        manageaccount.setTitle("Manage Account & Backup");
        manageaccount.setBackground(new java.awt.Color(255, 255, 255));
        manageaccount.setLocationByPlatform(true);
        manageaccount.setMinimumSize(new java.awt.Dimension(554, 477));
        manageaccount.setModalExclusionType(java.awt.Dialog.ModalExclusionType.TOOLKIT_EXCLUDE);
        manageaccount.setSize(new java.awt.Dimension(554, 477));
        manageaccount.setType(java.awt.Window.Type.POPUP);

        jTabbedPane2.setBackground(new java.awt.Color(255, 255, 255));
        jTabbedPane2.setPreferredSize(new java.awt.Dimension(554, 477));

        jPanel3.setBackground(new java.awt.Color(255, 255, 255));
        jPanel3.setMinimumSize(new java.awt.Dimension(554, 477));
        jPanel3.setPreferredSize(new java.awt.Dimension(554, 477));

        jLabel11.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/icons8_select_users_100px.png"))); // NOI18N
        jLabel11.setText("USERNAME");
        jLabel11.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jLabel11.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);

        updateuser.setText("UPDATE");
        updateuser.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updateuserActionPerformed(evt);
            }
        });

        accounttable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "USERNAME", "PASSWORD", "ACCESS"
            }
        ));
        jScrollPane1.setViewportView(accounttable);
        accounttableDisplay();

        adduser.setText("ADD");
        adduser.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                adduserActionPerformed(evt);
            }
        });

        deleteuser.setText("DELETE");
        deleteuser.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteuserActionPerformed(evt);
            }
        });

        fullaccessbtn.setText("FULL ACCESS");
        fullaccessbtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                fullaccessbtnActionPerformed(evt);
            }
        });

        revokeacessbtn.setText("REVOKE ACESS");
        revokeacessbtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                revokeacessbtnActionPerformed(evt);
            }
        });

        userrefreshtable.setText("REFRESH");
        userrefreshtable.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                userrefreshtableActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(187, 187, 187)
                        .addComponent(jLabel11))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(14, 14, 14)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 375, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(fullaccessbtn, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(updateuser, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(deleteuser, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(adduser, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(userrefreshtable, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(revokeacessbtn, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addContainerGap(44, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addComponent(jLabel11)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(adduser)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(deleteuser)
                        .addGap(18, 18, 18)
                        .addComponent(updateuser)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(fullaccessbtn)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(revokeacessbtn)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(userrefreshtable))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                .addContainerGap(125, Short.MAX_VALUE))
        );

        jTabbedPane2.addTab("MANAGE ACCOUNT", jPanel3);

        jPanel5.setBackground(new java.awt.Color(255, 255, 255));

        jLabel12.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/icons8_cloud_backup_restore_100px.png"))); // NOI18N

        jButton9.setText("BACKUP");
        jButton9.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton9ActionPerformed(evt);
            }
        });

        jButton10.setText("RESTORE");
        jButton10.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton10ActionPerformed(evt);
            }
        });

        jButton3.setText("DELETE ALL DATA");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addGap(193, 193, 193)
                        .addComponent(jLabel12))
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addGap(46, 46, 46)
                        .addComponent(jButton9, javax.swing.GroupLayout.PREFERRED_SIZE, 147, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jButton10, javax.swing.GroupLayout.PREFERRED_SIZE, 124, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 149, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(52, Short.MAX_VALUE))
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel5Layout.createSequentialGroup()
                .addGap(16, 16, 16)
                .addComponent(jLabel12)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 56, Short.MAX_VALUE)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jButton3, javax.swing.GroupLayout.DEFAULT_SIZE, 88, Short.MAX_VALUE)
                    .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(jButton9, javax.swing.GroupLayout.DEFAULT_SIZE, 88, Short.MAX_VALUE)
                        .addComponent(jButton10, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addGap(129, 129, 129))
        );

        jTabbedPane2.addTab("BACKUP & RESTORE", jPanel5);

        javax.swing.GroupLayout manageaccountLayout = new javax.swing.GroupLayout(manageaccount.getContentPane());
        manageaccount.getContentPane().setLayout(manageaccountLayout);
        manageaccountLayout.setHorizontalGroup(
            manageaccountLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        manageaccountLayout.setVerticalGroup(
            manageaccountLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 424, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        addusers.setTitle("ADD USERS");
        addusers.setMinimumSize(new java.awt.Dimension(286, 230));
        addusers.setResizable(false);
        addusers.setSize(new java.awt.Dimension(296, 249));

        jPanel7.setBackground(new java.awt.Color(255, 255, 255));
        jPanel7.setMinimumSize(new java.awt.Dimension(286, 249));
        jPanel7.setRequestFocusEnabled(false);

        jLabel13.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jLabel13.setForeground(new java.awt.Color(0, 51, 255));
        jLabel13.setText("ADD USERS");

        jButton11.setText("sumbit");
        jButton11.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton11ActionPerformed(evt);
            }
        });

        jLabel14.setText("username");

        jLabel15.setText("password");

        fullaccess.setText("Full acess");
        fullaccess.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                fullaccessItemStateChanged(evt);
            }
        });

        javax.swing.GroupLayout jPanel7Layout = new javax.swing.GroupLayout(jPanel7);
        jPanel7.setLayout(jPanel7Layout);
        jPanel7Layout.setHorizontalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addGap(102, 102, 102)
                .addComponent(jLabel13)
                .addGap(0, 0, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel7Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel15, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel14, javax.swing.GroupLayout.Alignment.TRAILING))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jButton11, javax.swing.GroupLayout.PREFERRED_SIZE, 157, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(fullaccess)
                    .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(usert1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 157, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(usert2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 157, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(59, 59, 59))
        );
        jPanel7Layout.setVerticalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addGap(15, 15, 15)
                .addComponent(jLabel13)
                .addGap(18, 18, 18)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(usert1, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel14))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(usert2, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel15))
                .addGap(12, 12, 12)
                .addComponent(fullaccess)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton11, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout addusersLayout = new javax.swing.GroupLayout(addusers.getContentPane());
        addusers.getContentPane().setLayout(addusersLayout);
        addusersLayout.setHorizontalGroup(
            addusersLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        addusersLayout.setVerticalGroup(
            addusersLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        modifyusers.setTitle("ADD USERS");
        modifyusers.setMinimumSize(new java.awt.Dimension(286, 230));
        modifyusers.setResizable(false);
        modifyusers.setSize(new java.awt.Dimension(296, 249));

        jPanel8.setBackground(new java.awt.Color(255, 255, 255));
        jPanel8.setMinimumSize(new java.awt.Dimension(286, 249));
        jPanel8.setRequestFocusEnabled(false);

        jLabel16.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jLabel16.setForeground(new java.awt.Color(0, 51, 255));
        jLabel16.setText("ADD USERS");

        jButton12.setText("sumbit");
        jButton12.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton12ActionPerformed(evt);
            }
        });

        jLabel17.setText("username");

        jLabel18.setText("password");

        fullaccess1.setText("Full acess");
        fullaccess1.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                fullaccess1ItemStateChanged(evt);
            }
        });

        javax.swing.GroupLayout jPanel8Layout = new javax.swing.GroupLayout(jPanel8);
        jPanel8.setLayout(jPanel8Layout);
        jPanel8Layout.setHorizontalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addGap(102, 102, 102)
                .addComponent(jLabel16)
                .addGap(0, 0, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel8Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel18, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel17, javax.swing.GroupLayout.Alignment.TRAILING))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jButton12, javax.swing.GroupLayout.PREFERRED_SIZE, 157, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(fullaccess1)
                    .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(usert3, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 157, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(usert4, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 157, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(59, 59, 59))
        );
        jPanel8Layout.setVerticalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addGap(15, 15, 15)
                .addComponent(jLabel16)
                .addGap(18, 18, 18)
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(usert3, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel17))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(usert4, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel18))
                .addGap(12, 12, 12)
                .addComponent(fullaccess1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton12, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout modifyusersLayout = new javax.swing.GroupLayout(modifyusers.getContentPane());
        modifyusers.getContentPane().setLayout(modifyusersLayout);
        modifyusersLayout.setHorizontalGroup(
            modifyusersLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel8, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        modifyusersLayout.setVerticalGroup(
            modifyusersLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        startupTabbedPane.setBackground(new java.awt.Color(255, 255, 255));
        startupTabbedPane.setTabLayoutPolicy(javax.swing.JTabbedPane.SCROLL_TAB_LAYOUT);
        startupTabbedPane.setAutoscrolls(true);
        startupTabbedPane.setFocusCycleRoot(true);
        startupTabbedPane.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        startupTabbedPane.setOpaque(true);
        /*startupTabbedPane.setUI(new BasicTabbedPaneUI() {
            @Override
            protected int calculateTabHeight(int tabPlacement, int tabIndex, int fontHeight) {
                // Adjust the tab height as per your requirement
                return super.calculateTabHeight(tabPlacement, tabIndex, fontHeight) + 20; // Example: Increase by 10 pixels
            }

            @Override
            protected int calculateTabWidth(int tabPlacement, int tabIndex, java.awt.FontMetrics metrics) {
                // Adjust the tab width as per your requirement
                return super.calculateTabWidth(tabPlacement, tabIndex, metrics) + 50; // Example: Increase by 20 pixels
            }
        });*/

        bgPanel.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel1.setBackground(new java.awt.Color(204, 255, 255));
        jPanel1.setBorder(javax.swing.BorderFactory.createCompoundBorder(new javax.swing.border.LineBorder(new java.awt.Color(255, 0, 0), 1, true), new javax.swing.border.LineBorder(new java.awt.Color(0, 51, 255), 1, true)));
        jPanel1.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        jPanel1.setOpaque(false);

        jLabel5.setFont(new java.awt.Font("Times New Roman", 1, 48)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(0, 0, 255));
        jLabel5.setText("WELCOME TO MTA DATABASE");

        jLabel8.setFont(new java.awt.Font("Times New Roman", 1, 48)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(0, 0, 255));
        jLabel8.setText("MANAGEMENT SYSTEM");

        jLabel4.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(255, 255, 255));
        jLabel4.setText("GET STARTED");

        jLabel9.setBackground(new java.awt.Color(0, 51, 255));
        jLabel9.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        jLabel9.setForeground(new java.awt.Color(255, 255, 255));
        jLabel9.setText("START WITH IMPORTING OLD DATABASE FROM EXCEL");
        jLabel9.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 1, 0, new java.awt.Color(0, 51, 255)));
        jLabel9.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                jLabel9MouseEntered(evt);
            }
        });

        jLabel10.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        jLabel10.setForeground(new java.awt.Color(255, 255, 255));
        jLabel10.setText("HELP?");
        jLabel10.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 1, 0, new java.awt.Color(0, 51, 255)));

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(52, 52, 52)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 638, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel5)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(69, 69, 69)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel9)
                            .addComponent(jLabel4)
                            .addComponent(jLabel10))))
                .addContainerGap(32, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(42, 42, 42)
                .addComponent(jLabel5)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel8)
                .addGap(18, 18, 18)
                .addComponent(jLabel4)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel9)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel10)
                .addContainerGap(71, Short.MAX_VALUE))
        );

        bgPanel.add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 210, 830, 350));

        swapimagelabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        swapimagelabel.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/Homebg.jpg"))); // NOI18N
        swapimagelabel.setSize(1400, 720);
        others o = new others();

        o.fitImageToLable(swapimagelabel);
        bgPanel.add(swapimagelabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1400, 720));

        startupTabbedPane.addTab("HOME", new javax.swing.ImageIcon(getClass().getResource("/icons/icons8_home_page_48px.png")), bgPanel, "HOME"); // NOI18N

        Importpane.setBackground(new java.awt.Color(255, 255, 255));
        Importpane.setLayout(new java.awt.BorderLayout());

        IM_toolbox.setBackground(new java.awt.Color(0, 0, 0));
        IM_toolbox.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 1, true));
        IM_toolbox.setMinimumSize(new java.awt.Dimension(525, 100));
        IM_toolbox.setPreferredSize(new java.awt.Dimension(905, 100));
        IM_toolbox.setLayout(new java.awt.GridLayout(1, 0, 2, 10));

        addimports.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/icons8_add_48px.png"))); // NOI18N
        addimports.setText("ADD IMPORT");
        addimports.setBorder(null);
        addimports.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        addimports.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        addimports.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        addimports.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addimportsActionPerformed(evt);
            }
        });
        IM_toolbox.add(addimports);

        IM_importdbbtn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/icons8_database_restore_48px.png"))); // NOI18N
        IM_importdbbtn.setText("IMPORT DB");
        IM_importdbbtn.setBorder(null);
        IM_importdbbtn.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        IM_importdbbtn.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        IM_importdbbtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                IM_importdbbtnActionPerformed(evt);
            }
        });
        IM_toolbox.add(IM_importdbbtn);

        IM_exportdbbtn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/icons8_database_export_48px.png"))); // NOI18N
        IM_exportdbbtn.setText("EXPORT DB");
        IM_exportdbbtn.setBorder(null);
        IM_exportdbbtn.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        IM_exportdbbtn.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        IM_toolbox.add(IM_exportdbbtn);

        IM_editrowbtn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/icons8_edit_property_48px.png"))); // NOI18N
        IM_editrowbtn.setText("EDIT ROW");
        IM_editrowbtn.setBorder(null);
        IM_editrowbtn.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        IM_editrowbtn.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        IM_toolbox.add(IM_editrowbtn);

        IM_searchbtn.setText("SEARCH & QUERRY");
        IM_searchbtn.setBorder(null);
        IM_searchbtn.setIconTextGap(0);
        IM_searchbtn.setPressedIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/icons8_shipped_48px.png"))); // NOI18N
        IM_searchbtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                IM_searchbtnActionPerformed(evt);
            }
        });
        IM_toolbox.add(IM_searchbtn);

        IM_sortbtn.setText("SORT & FILTER");
        IM_sortbtn.setBorder(null);
        IM_sortbtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                IM_sortbtnActionPerformed(evt);
            }
        });
        IM_toolbox.add(IM_sortbtn);

        jButton2.setText("RESET QUERRY & SORT");
        jButton2.setBorder(null);
        IM_toolbox.add(jButton2);

        Importpane.add(IM_toolbox, java.awt.BorderLayout.PAGE_START);

        IM_mainbg.setBackground(new java.awt.Color(255, 255, 255));
        IM_mainbg.setLayout(new java.awt.BorderLayout(2, 0));

        IM_searchbg.setBackground(new java.awt.Color(255, 255, 255));
        IM_searchbg.setPreferredSize(new java.awt.Dimension(280, 315));

        IM_existsearch.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/icons8_closesearchpane_window_20px.png"))); // NOI18N
        IM_existsearch.setBorderPainted(false);
        IM_existsearch.setContentAreaFilled(false);
        IM_existsearch.setPreferredSize(new java.awt.Dimension(18, 18));
        IM_existsearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                IM_existsearchActionPerformed(evt);
            }
        });

        jLabel2.setText("SEARCH");

        jTextField2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField2ActionPerformed(evt);
            }
        });

        jComboBox2.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "goodid", "importer name", "importer id", "reciver name", "transport ref/LTA", "importer_country", "importer_town", "shippingdate", "invoicedate", "arrivaldate" }));

        javax.swing.GroupLayout IM_searchbgLayout = new javax.swing.GroupLayout(IM_searchbg);
        IM_searchbg.setLayout(IM_searchbgLayout);
        IM_searchbgLayout.setHorizontalGroup(
            IM_searchbgLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(IM_searchbgLayout.createSequentialGroup()
                .addGroup(IM_searchbgLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, IM_searchbgLayout.createSequentialGroup()
                        .addContainerGap(256, Short.MAX_VALUE)
                        .addComponent(IM_existsearch, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(IM_searchbgLayout.createSequentialGroup()
                        .addGroup(IM_searchbgLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(IM_searchbgLayout.createSequentialGroup()
                                .addGap(16, 16, 16)
                                .addComponent(jLabel2))
                            .addGroup(IM_searchbgLayout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(jComboBox2, javax.swing.GroupLayout.PREFERRED_SIZE, 164, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
            .addGroup(IM_searchbgLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, 188, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        IM_searchbgLayout.setVerticalGroup(
            IM_searchbgLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(IM_searchbgLayout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addComponent(IM_existsearch, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel2)
                .addGap(18, 18, 18)
                .addComponent(jComboBox2, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(28, 28, 28)
                .addComponent(jTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(467, Short.MAX_VALUE))
        );

        IM_searchbg.setPreferredSize(new java.awt.Dimension(0, 315));

        IM_mainbg.add(IM_searchbg, java.awt.BorderLayout.WEST);

        IM_tablebg.setBackground(new java.awt.Color(255, 255, 255));
        IM_tablebg.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        IM_tablebg.setLayout(new java.awt.BorderLayout());

        importtb.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "GOOD ID", "NATURE", "QUANTITY", "WEIGHT", "DESCRIPTION", "INVOICE DATE", "SHIPPING DATE", "CUSTOMER NIC", "CUSTOMER NAME", "CUSTOMER ADDRESS", "CUSTOMER GENDER", "RECIVER NAME", "RECIEVER ADDRESS", "RECIEVER GENDER", "MEANS", "TRANSPORT AGENCY", "LTA/BL", "ARRIVAL DATE", "DELIVERY DATE", "DESTINATION COUNTRY", "DESTINATION TOWN", "FOLDER NAME", "AMOUNT"
            }
        ));
        importtb.setAutoResizeMode(javax.swing.JTable.AUTO_RESIZE_OFF);
        importdb.setViewportView(importtb);

        IM_tablebg.add(importdb, java.awt.BorderLayout.CENTER);

        IM_mainbg.add(IM_tablebg, java.awt.BorderLayout.CENTER);

        IM_sortpane.setPreferredSize(new java.awt.Dimension(200, 291));

        javax.swing.GroupLayout IM_sortpaneLayout = new javax.swing.GroupLayout(IM_sortpane);
        IM_sortpane.setLayout(IM_sortpaneLayout);
        IM_sortpaneLayout.setHorizontalGroup(
            IM_sortpaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 200, Short.MAX_VALUE)
        );
        IM_sortpaneLayout.setVerticalGroup(
            IM_sortpaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 620, Short.MAX_VALUE)
        );

        IM_sortpane.setPreferredSize(new java.awt.Dimension(0, 315));

        IM_mainbg.add(IM_sortpane, java.awt.BorderLayout.EAST);

        Importpane.add(IM_mainbg, java.awt.BorderLayout.CENTER);

        startupTabbedPane.addTab("IMPORTS", new javax.swing.ImageIcon(getClass().getResource("/icons/icons8_database_daily_import_48px_1.png")), Importpane); // NOI18N

        Exportpane.setLayout(new java.awt.BorderLayout());

        EX_toolbox.setBackground(new java.awt.Color(0, 0, 0));
        EX_toolbox.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 1, true));
        EX_toolbox.setMinimumSize(new java.awt.Dimension(525, 100));
        EX_toolbox.setPreferredSize(new java.awt.Dimension(905, 100));
        EX_toolbox.setLayout(new java.awt.GridLayout(1, 0, 2, 10));

        addexports.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/icons8_add_48px.png"))); // NOI18N
        addexports.setText("ADD EXPORT");
        addexports.setBorder(null);
        addexports.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        addexports.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        addexports.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        addexports.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addexportsActionPerformed(evt);
            }
        });
        EX_toolbox.add(addexports);

        EX_importdbbtn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/icons8_database_restore_48px.png"))); // NOI18N
        EX_importdbbtn.setText("IMPORT DB");
        EX_importdbbtn.setBorder(null);
        EX_importdbbtn.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        EX_importdbbtn.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        EX_importdbbtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                EX_importdbbtnActionPerformed(evt);
            }
        });
        EX_toolbox.add(EX_importdbbtn);

        EX_exportdbbtn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/icons8_database_export_48px.png"))); // NOI18N
        EX_exportdbbtn.setText("EXPORT DB");
        EX_exportdbbtn.setBorder(null);
        EX_exportdbbtn.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        EX_exportdbbtn.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        EX_toolbox.add(EX_exportdbbtn);

        EX_editrowbtn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/icons8_edit_property_48px.png"))); // NOI18N
        EX_editrowbtn.setText("EDIT ROW");
        EX_editrowbtn.setBorder(null);
        EX_editrowbtn.setEnabled(false);
        if(adminstatus.getText()=="ADMIN"){EX_editrowbtn.setEnabled(true);
            EX_toolbox.repaint();
        }
        EX_editrowbtn.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        EX_editrowbtn.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        EX_editrowbtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                EX_editrowbtnActionPerformed(evt);
            }
        });
        EX_toolbox.add(EX_editrowbtn);
        if(adminstatus.getText()=="ADMIN"){EX_editrowbtn.setEnabled(true);
            System.out.println(adminstatus.getText());
            EX_toolbox.repaint();
        }

        EX_searchbtn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/icons8_search_more_48px.png"))); // NOI18N
        EX_searchbtn.setText("SEARCH");
        EX_searchbtn.setBorder(null);
        EX_searchbtn.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        EX_searchbtn.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        EX_searchbtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                EX_searchbtnActionPerformed(evt);
            }
        });
        EX_toolbox.add(EX_searchbtn);

        EX_deletebtn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/icons8_delete_database_48px.png"))); // NOI18N
        EX_deletebtn.setText("DELETE");
        EX_deletebtn.setBorder(null);
        EX_deletebtn.setEnabled(false);
        EX_deletebtn.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        EX_deletebtn.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        EX_deletebtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                EX_deletebtnActionPerformed(evt);
            }
        });
        EX_toolbox.add(EX_deletebtn);

        EX_searchbtn1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/icons8_reset_48px.png"))); // NOI18N
        EX_searchbtn1.setText("RESET");
        EX_searchbtn1.setBorder(null);
        EX_searchbtn1.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        EX_searchbtn1.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        EX_searchbtn1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                EX_searchbtn1ActionPerformed(evt);
            }
        });
        EX_toolbox.add(EX_searchbtn1);

        Exportpane.add(EX_toolbox, java.awt.BorderLayout.PAGE_START);

        EX_mainbg.setBackground(new java.awt.Color(255, 255, 255));
        EX_mainbg.setLayout(new java.awt.BorderLayout(2, 0));

        EX_searchbg.setBackground(new java.awt.Color(255, 255, 255));
        EX_searchbg.setPreferredSize(new java.awt.Dimension(280, 315));

        EX_existsearch.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/icons8_closesearchpane_window_20px.png"))); // NOI18N
        EX_existsearch.setBorderPainted(false);
        EX_existsearch.setContentAreaFilled(false);
        EX_existsearch.setPreferredSize(new java.awt.Dimension(18, 18));
        EX_existsearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                EX_existsearchActionPerformed(evt);
            }
        });

        jLabel1.setText("SEARCH");

        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "goodid", "importer name", "importer id", "reciver name", "transport ref/LTA", "importer_country", "importer_town", "shippingdate", "invoicedate", "arrivaldate" }));

        jButton1.setText("SEARCH");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout EX_searchbgLayout = new javax.swing.GroupLayout(EX_searchbg);
        EX_searchbg.setLayout(EX_searchbgLayout);
        EX_searchbgLayout.setHorizontalGroup(
            EX_searchbgLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(EX_searchbgLayout.createSequentialGroup()
                .addGroup(EX_searchbgLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, EX_searchbgLayout.createSequentialGroup()
                        .addContainerGap(256, Short.MAX_VALUE)
                        .addComponent(EX_existsearch, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(EX_searchbgLayout.createSequentialGroup()
                        .addGroup(EX_searchbgLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(EX_searchbgLayout.createSequentialGroup()
                                .addGap(16, 16, 16)
                                .addComponent(jLabel1))
                            .addGroup(EX_searchbgLayout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, 164, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
            .addGroup(EX_searchbgLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(searchtf1, javax.swing.GroupLayout.PREFERRED_SIZE, 188, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, EX_searchbgLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jButton1)
                .addGap(18, 18, 18))
        );
        EX_searchbgLayout.setVerticalGroup(
            EX_searchbgLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(EX_searchbgLayout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addComponent(EX_existsearch, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel1)
                .addGap(18, 18, 18)
                .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(28, 28, 28)
                .addComponent(searchtf1, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jButton1)
                .addContainerGap(426, Short.MAX_VALUE))
        );

        EX_searchbg.setPreferredSize(new java.awt.Dimension(0, 315));

        EX_mainbg.add(EX_searchbg, java.awt.BorderLayout.WEST);

        EX_tablebg.setBackground(new java.awt.Color(255, 255, 255));
        EX_tablebg.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        EX_tablebg.setLayout(new java.awt.BorderLayout());

        exporttb.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "GOOD ID", "NATURE", "QUANTITY", "WEIGHT", "DESCRIPTION", "INVOICE DATE", "SHIPPING DATE", "CUSTOMER NIC", "CUSTOMER NAME", "CUSTOMER ADDRESS", "CUSTOMER GENDER", "RECIVER NAME", "RECIEVER ADDRESS", "RECIEVER GENDER", "MEANS", "TRANSPORT AGENCY", "LTA/BL", "TRANSPORT REF", "ARRIVAL DATE", "DELIVERY DATE", "DESTINATION COUNTRY", "DESTINATION TOWN", "FOLDER NAME", "AMOUNT"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        exporttb.setAutoResizeMode(javax.swing.JTable.AUTO_RESIZE_OFF);
        exportdb.setViewportView(exporttb);
        if (exporttb.getColumnModel().getColumnCount() > 0) {
            exporttb.getColumnModel().getColumn(2).setMinWidth(0);
            exporttb.getColumnModel().getColumn(2).setPreferredWidth(0);
            exporttb.getColumnModel().getColumn(2).setMaxWidth(0);
        }

        EX_tablebg.add(exportdb, java.awt.BorderLayout.CENTER);

        EX_mainbg.add(EX_tablebg, java.awt.BorderLayout.CENTER);

        EX_sortpane.setPreferredSize(new java.awt.Dimension(200, 291));

        javax.swing.GroupLayout EX_sortpaneLayout = new javax.swing.GroupLayout(EX_sortpane);
        EX_sortpane.setLayout(EX_sortpaneLayout);
        EX_sortpaneLayout.setHorizontalGroup(
            EX_sortpaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 200, Short.MAX_VALUE)
        );
        EX_sortpaneLayout.setVerticalGroup(
            EX_sortpaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 620, Short.MAX_VALUE)
        );

        EX_sortpane.setPreferredSize(new java.awt.Dimension(0, 315));

        EX_mainbg.add(EX_sortpane, java.awt.BorderLayout.EAST);

        Exportpane.add(EX_mainbg, java.awt.BorderLayout.CENTER);

        startupTabbedPane.addTab("EXPORTS", new javax.swing.ImageIcon(getClass().getResource("/icons/icons8_shipped_48px.png")), Exportpane); // NOI18N

        Reportpane.setBackground(new java.awt.Color(255, 255, 255));
        Reportpane.setLayout(new java.awt.BorderLayout());

        jTabbedPane1.setBackground(new java.awt.Color(0, 204, 255));
        jTabbedPane1.setForeground(new java.awt.Color(255, 255, 255));
        jTabbedPane1.setTabPlacement(javax.swing.JTabbedPane.LEFT);

        jPanel2.setBackground(new java.awt.Color(102, 204, 255));

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 629, Short.MAX_VALUE)
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 360, Short.MAX_VALUE)
        );

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "GOOD ID ", "CUSTOMER ", "DESTINATION"
            }
        ));
        jScrollPane2.setViewportView(jTable1);

        importreportyear.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        jLabel3.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(255, 255, 255));
        jLabel3.setText("REPORT YEAR / MONTH");

        jComboBox3.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(42, 42, 42)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(jPanel2Layout.createSequentialGroup()
                            .addComponent(jLabel3)
                            .addGap(28, 28, 28)
                            .addComponent(importreportyear, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(18, 18, 18)
                            .addComponent(jComboBox3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 639, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(602, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addGap(54, 54, 54)
                .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 91, Short.MAX_VALUE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(importreportyear, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3)
                    .addComponent(jComboBox3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 162, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(19, 19, 19))
        );

        jTabbedPane1.addTab("IMPORT REPORT", jPanel2);

        exreportpane.setBackground(new java.awt.Color(255, 102, 102));

        javax.swing.GroupLayout exportchartpaneLayout = new javax.swing.GroupLayout(exportchartpane);
        exportchartpane.setLayout(exportchartpaneLayout);
        exportchartpaneLayout.setHorizontalGroup(
            exportchartpaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 595, Short.MAX_VALUE)
        );
        exportchartpaneLayout.setVerticalGroup(
            exportchartpaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 391, Short.MAX_VALUE)
        );

        exreporttable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null},
                {null, null},
                {null, null},
                {null, null}
            },
            new String [] {
                "FREQUENCY", "DESTINATION"
            }
        ));
        jScrollPane3.setViewportView(exreporttable);

        selectreporttodisplay.setText("SELECT REPORT TO DISPLAY");
        selectreporttodisplay.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                selectreporttodisplayActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout exreportpaneLayout = new javax.swing.GroupLayout(exreportpane);
        exreportpane.setLayout(exreportpaneLayout);
        exreportpaneLayout.setHorizontalGroup(
            exreportpaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(exreportpaneLayout.createSequentialGroup()
                .addGap(42, 42, 42)
                .addGroup(exreportpaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, exreportpaneLayout.createSequentialGroup()
                        .addComponent(selectreporttodisplay)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 377, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(exportchartpane, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(289, 646, Short.MAX_VALUE))
        );
        exreportpaneLayout.setVerticalGroup(
            exreportpaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, exreportpaneLayout.createSequentialGroup()
                .addGap(52, 52, 52)
                .addComponent(exportchartpane, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(46, 46, 46)
                .addGroup(exreportpaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 162, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(selectreporttodisplay, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(69, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("EXPORT REPORT", exreportpane);

        Reportpane.add(jTabbedPane1, java.awt.BorderLayout.CENTER);

        startupTabbedPane.addTab("GLOBAL REPORT", new javax.swing.ImageIcon(getClass().getResource("/icons/icons8_combo_chart_48px.png")), Reportpane); // NOI18N

        accountbtn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/icons8_male_user_20px.png"))); // NOI18N
        accountbtn.setText("ACCOUNT");
        accountbtn.setHorizontalTextPosition(javax.swing.SwingConstants.RIGHT);

        manageaccountbtn.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_M, java.awt.event.InputEvent.CTRL_DOWN_MASK));
        manageaccountbtn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/icons8_male_user_20px.png"))); // NOI18N
        manageaccountbtn.setText("Manage Account");
        manageaccountbtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                manageaccountbtnActionPerformed(evt);
            }
        });
        accountbtn.add(manageaccountbtn);

        logoutbtn.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_L, java.awt.event.InputEvent.CTRL_DOWN_MASK));
        logoutbtn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/icons8_logout_rounded_left_20px_1.png"))); // NOI18N
        logoutbtn.setText("LOGOUT");
        logoutbtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                logoutbtnActionPerformed(evt);
            }
        });
        accountbtn.add(logoutbtn);

        jMenuBar1.add(accountbtn);
        jMenuBar1.add(adminstatus);

        jMenu1.setText("File");

        jMenuItem1.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_F4, java.awt.event.InputEvent.CTRL_DOWN_MASK));
        jMenuItem1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/icons8_exit_20px_1.png"))); // NOI18N
        jMenuItem1.setText("EXIT");
        jMenu1.add(jMenuItem1);

        jMenuBar1.add(jMenu1);

        jMenu2.setText("Edit");
        jMenu2.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jMenuBar1.add(jMenu2);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(startupTabbedPane)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(startupTabbedPane)
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void EX_existsearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_EX_existsearchActionPerformed
        // TODO add your handling code here:
       EX_searchbg.setPreferredSize(new java.awt.Dimension(0, 315)); 
       EX_mainbg.revalidate();
        EX_mainbg.repaint();
    }//GEN-LAST:event_EX_existsearchActionPerformed

    private void addexportsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addexportsActionPerformed
        // TODO add your handling code here:
        
        ADDEXPORTS imp = new ADDEXPORTS(this);
        imp.setVisible(true);
        this.setEnabled(false);
        
    }//GEN-LAST:event_addexportsActionPerformed

    private void EX_importdbbtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_EX_importdbbtnActionPerformed
        String defaultCurrentDirectoryPath = "C:\\Users\\Authentic\\Desktop";
        JFileChooser fileChooser = new JFileChooser(defaultCurrentDirectoryPath);
    fileChooser.setDialogTitle("Select Excel File");
    FileNameExtensionFilter fnef = new FileNameExtensionFilter("EXCEL FILES", "xls", "xlsx", "xlsm");
    fileChooser.setFileFilter(fnef);
    
    int returnValue = fileChooser.showOpenDialog(this);
    
    if (returnValue == JFileChooser.APPROVE_OPTION) {
        File selectedFile = fileChooser.getSelectedFile();
        EX_importExcel(selectedFile);
        }
   // DisplayImportTable();
    }//GEN-LAST:event_EX_importdbbtnActionPerformed
private void EX_importExcel(File selectedFile) {
        EXPORTDBM db = new EXPORTDBM();
          try {
               
                FileInputStream excelFile = new FileInputStream(selectedFile);
                XSSFWorkbook workbook = new XSSFWorkbook(excelFile);
                XSSFSheet sheet = workbook.getSheetAt(0);
               
                
                for (int i = 1; i <= sheet.getLastRowNum(); i++) {
                    XSSFRow row = sheet.getRow(i);
                    if (row != null) {
                     System.out.println(i+":"+row.getLastCellNum());
                        
                           
                        long goodid = (long) row.getCell(0).getNumericCellValue();
                        String nature = row.getCell(1).getStringCellValue();
                        int quantity = (int)row.getCell(2).getNumericCellValue();
                        int weight  = (int)row.getCell(3).getNumericCellValue();
                        String description = row.getCell(4).getStringCellValue();
                        
                        Date INVDATE = row.getCell(5).getDateCellValue();
                        Date SHIPDATE = row.getCell(6).getDateCellValue();
                        long impid = (long) row.getCell(7).getNumericCellValue();
                        
                        String impname=row.getCell(8).getStringCellValue();
                        String impaddress = row.getCell(9).getStringCellValue();
                        String impsex = row.getCell(10).getStringCellValue();
                        String recname = row.getCell(11).getStringCellValue();
                        String recaddress = row.getCell(12).getStringCellValue();
                        String recsex = row.getCell(13).getStringCellValue();
                        String transmeans =row.getCell(14).getStringCellValue();
                        String transagency = row.getCell(15).getStringCellValue();                        
                        long translta = (long) row.getCell(16).getNumericCellValue();
                        String transref = row.getCell(17).getStringCellValue();
                        Date ARRDATE = row.getCell(18).getDateCellValue();
                        Date DELDATE = row.getCell(19).getDateCellValue();
                        String importer_country = row.getCell(20).getStringCellValue();
                        String importer_town = row.getCell(21).getStringCellValue();
                        String folder_name = row.getCell(22).getStringCellValue();
                        Long amount = (long)row.getCell(23).getNumericCellValue();
                        
                    
                    if(!db.checkid(goodid)){
                        
                    db.insertEXPORTRow(goodid, nature, quantity, weight, description, ARRDATE, INVDATE, DELDATE, folder_name, impname, impaddress, impsex, impid, recname, recaddress, recsex, translta, transmeans, transagency, importer_country, importer_town, SHIPDATE, transref, amount);
                   //db.insertEXPORTRow(goodid, nature, quantity, weight, description, impname, impaddress, impsex, impid, recname, recaddress, recsex, transref, transmeans, transagency, importer_country, importer_town, SHIPDATE, INVDATE, ARRDATE);
                    }  
                    }
                }

                workbook.close();
                db.close();
                JOptionPane.showMessageDialog(this, "Data imported successfully!");
               EX_DisplayExportTable();
            } catch (Exception ex) {
                ex.printStackTrace();
                JOptionPane.showMessageDialog(this, "Error importing data: " + ex.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
            }
        
    }
    
    private void addimportsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addimportsActionPerformed
         
    }//GEN-LAST:event_addimportsActionPerformed

    private void IM_importdbbtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_IM_importdbbtnActionPerformed
        String defaultCurrentDirectoryPath = "C:\\Users\\Authentic\\Desktop";
        JFileChooser fileChooser = new JFileChooser(defaultCurrentDirectoryPath);
    fileChooser.setDialogTitle("Select Excel File");
    FileNameExtensionFilter fnef = new FileNameExtensionFilter("EXCEL FILES", "xls", "xlsx", "xlsm");
    fileChooser.setFileFilter(fnef);
    
    int returnValue = fileChooser.showOpenDialog(this);
    
    if (returnValue == JFileChooser.APPROVE_OPTION) {
        File selectedFile = fileChooser.getSelectedFile();
        IM_importExcel(selectedFile);
        }
    }//GEN-LAST:event_IM_importdbbtnActionPerformed
private void IM_importExcel(File selectedFile) {
        IMPORTDBM db = new IMPORTDBM();
        
            try {
               
                FileInputStream excelFile = new FileInputStream(selectedFile);
                XSSFWorkbook workbook = new XSSFWorkbook(excelFile);
                XSSFSheet sheet = workbook.getSheetAt(0);
               
                
                for (int i = 1; i <= sheet.getLastRowNum(); i++) {
                    XSSFRow row = sheet.getRow(i);
                    if (row != null) {
                     System.out.println(i+":"+row.getLastCellNum());
                        
                           
                        long goodid = (long) row.getCell(0).getNumericCellValue();
                        String nature = row.getCell(1).getStringCellValue();
                        int quantity = (int)row.getCell(2).getNumericCellValue();
                        int weight  = (int)row.getCell(3).getNumericCellValue();
                        String description = row.getCell(4).getStringCellValue();
                        
                        Date INVDATE = row.getCell(5).getDateCellValue();
                        Date SHIPDATE = row.getCell(6).getDateCellValue();
                        long impid = (long) row.getCell(7).getNumericCellValue();
                        
                        String impname=row.getCell(8).getStringCellValue();
                        String impaddress = row.getCell(9).getStringCellValue();
                        String impsex = row.getCell(10).getStringCellValue();
                        String recname = row.getCell(11).getStringCellValue();
                        String recaddress = row.getCell(12).getStringCellValue();
                        String recsex = row.getCell(13).getStringCellValue();
                        String transmeans =row.getCell(14).getStringCellValue();
                        String transagency = row.getCell(15).getStringCellValue();                        
                        long translta = (long) row.getCell(16).getNumericCellValue();
                        String transref = row.getCell(17).getStringCellValue();
                        Date ARRDATE = row.getCell(18).getDateCellValue();
                        Date DELDATE = row.getCell(19).getDateCellValue();
                        String importer_country = row.getCell(20).getStringCellValue();
                        String importer_town = row.getCell(21).getStringCellValue();
                        String folder_name = row.getCell(22).getStringCellValue();
                        Long amount = (long)row.getCell(23).getNumericCellValue();
                        
                    
                    if(!db.checkid(goodid)){
                        
                    db.insertEXPORTRow(goodid, nature, quantity, weight, description, ARRDATE, INVDATE, DELDATE, folder_name, impname, impaddress, impsex, impid, recname, recaddress, recsex, translta, transmeans, transagency, importer_country, importer_town, SHIPDATE, transref, amount);
                   //db.insertEXPORTRow(goodid, nature, quantity, weight, description, impname, impaddress, impsex, impid, recname, recaddress, recsex, transref, transmeans, transagency, importer_country, importer_town, SHIPDATE, INVDATE, ARRDATE);
                    }  
                    }
                }

                workbook.close();
                db.close();
                JOptionPane.showMessageDialog(this, "Data imported successfully!");
               IM_DisplayExportTable();
            } catch (Exception ex) {
                ex.printStackTrace();
                JOptionPane.showMessageDialog(this, "Error importing data: " + ex.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
            }
        
    }
    private void IM_searchbtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_IM_searchbtnActionPerformed
            int searchbgwidth = IM_searchbg.getWidth();
        if(searchbgwidth==0){
            searchbgwidth=280;
            IM_searchbg.setPreferredSize(new Dimension(searchbgwidth,IM_mainbg.getHeight()));
            IM_searchbg.setBorder(javax.swing.BorderFactory.createTitledBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 2, true), "SEARCH & SORT", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.TOP));
            IM_mainbg.revalidate();
            IM_mainbg.repaint();
        }else{
            IM_searchbg.setBorder(null);
            IM_searchbg.setPreferredSize(new java.awt.Dimension(0, 315));
            IM_mainbg.revalidate();
            IM_mainbg.repaint();
        }
        
    }//GEN-LAST:event_IM_searchbtnActionPerformed

    private void IM_sortbtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_IM_sortbtnActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_IM_sortbtnActionPerformed

    private void IM_existsearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_IM_existsearchActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_IM_existsearchActionPerformed

    private void DisplayreportbtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DisplayreportbtnActionPerformed
        // TODO add your handling code here:
        try { 
            int x =  Integer.parseInt((String) exportreportyear2.getSelectedItem());
            int y = exMonthChooser2.getMonth();
            ReportDBM rb =new ReportDBM();
            ResultSet  rs = rb.displayexportreporttable(x, y+1);
            System.out.println(x+" "+y);
            DefaultTableModel model = (DefaultTableModel) exreporttable.getModel();
            model.setRowCount(0);
            
            while (rs.next()) {
                int freq = rs.getInt("frequency");
                System.out.println(freq);
                String country = rs.getString("destination_country");
                System.out.println(country);
                model.addRow(new Object[]{freq,country});
                System.out.println("sucess");
            }
            Displayreport.dispose();
            ReportPieChart(exportchartpane ,  exreporttable);
            
        } catch (SQLException ex) {
            Logger.getLogger(startup.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_DisplayreportbtnActionPerformed

    private void selectreporttodisplayActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_selectreporttodisplayActionPerformed
        // TODO add your handling code here:
        Displayreport.setVisible(true);
        Displayreport.setLocationRelativeTo(null);
        
    }//GEN-LAST:event_selectreporttodisplayActionPerformed

    private void EX_searchbtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_EX_searchbtnActionPerformed
        int searchbgwidth = EX_searchbg.getWidth();
        if(searchbgwidth==0){
            searchbgwidth=280;
            EX_searchbg.setPreferredSize(new Dimension(searchbgwidth,EX_mainbg.getHeight()));
            EX_searchbg.setBorder(javax.swing.BorderFactory.createTitledBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 2, true), "SEARCH & SORT", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.TOP));
            EX_mainbg.revalidate();
            EX_mainbg.repaint();
        }else{
            EX_searchbg.setBorder(null);
            EX_searchbg.setPreferredSize(new java.awt.Dimension(0, 315));
            EX_mainbg.revalidate();
            EX_mainbg.repaint();
        }
        
    }//GEN-LAST:event_EX_searchbtnActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        String searctext = searchtf1.getText().toLowerCase();
        DefaultTableModel model = (DefaultTableModel) exporttb.getModel();
        for(int row = 0; row < model.getRowCount(); row++){
            for( int col=0; col < model.getColumnCount(); col++){
            String cellvalue= String.valueOf(model.getValueAt(row, col)).toLowerCase();
                if(cellvalue.contains(searctext)){
                    model.setRowCount(row);
                    return;
                }
                }
            
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void EX_searchbtn1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_EX_searchbtn1ActionPerformed
        // TODO add your handling code here:
       // DefaultTableModel model = (DefaultTableModel) exporttb.getModel();
        EX_DisplayExportTable();
   
        
    }//GEN-LAST:event_EX_searchbtn1ActionPerformed

    private void jTextField2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField2ActionPerformed

    private void jLabel9MouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel9MouseEntered
        // TODO add your handling code here:
    }//GEN-LAST:event_jLabel9MouseEntered

    private void EX_deletebtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_EX_deletebtnActionPerformed
        // TODO add your handling code here:
        EXPORTDBM EX = new EXPORTDBM(); 
        int selectedRow = exporttb.getSelectedRow();
            if (selectedRow == -1) {
                    // No row is selected, display an error message
                JOptionPane.showMessageDialog(this, "Please select a record to delete.", "Error", JOptionPane.ERROR_MESSAGE);
            }else {
                                      
                long id = (long) exporttb.getValueAt(selectedRow, 0);
                int showConfirmDialog = JOptionPane.showConfirmDialog(this, "DO you really want to delete", "Confirm Delete", JOptionPane.YES_NO_OPTION);
                System.out.println(showConfirmDialog);     
                if(showConfirmDialog==0){
                            EX.Delete(id);
                        System.out.println("sucesful delete");
                        EX_DisplayExportTable(); 
                     }
                   
            }
    }//GEN-LAST:event_EX_deletebtnActionPerformed

    private void EX_editrowbtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_EX_editrowbtnActionPerformed
        
        int selectedRow = exporttb.getSelectedRow();
        System.out.println(selectedRow);
            if (selectedRow == -1) {
                    // No row is selected, display an error message
                JOptionPane.showMessageDialog(this,
                        "Please select a record to delete.",
                        "Error", 
                        JOptionPane.ERROR_MESSAGE);
            }else {
                
                MODIFYEXPORTS md = new MODIFYEXPORTS(this);
                md.setVisible(true);
                this.setEnabled(false);
                md.olddata(selectedRow, exporttb);
                
            }
    }//GEN-LAST:event_EX_editrowbtnActionPerformed

    private void adduserActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_adduserActionPerformed
        addusers.setVisible(true);
        addusers.setLocationRelativeTo(null);
        
    }//GEN-LAST:event_adduserActionPerformed

    private void fullaccessbtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_fullaccessbtnActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_fullaccessbtnActionPerformed

    private void revokeacessbtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_revokeacessbtnActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_revokeacessbtnActionPerformed

    private void manageaccountbtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_manageaccountbtnActionPerformed
        // TODO add your handling code here:
        manageaccount.setVisible(true);
        manageaccount.setLocationRelativeTo(null);
    }//GEN-LAST:event_manageaccountbtnActionPerformed

    private void userrefreshtableActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_userrefreshtableActionPerformed
        accounttableDisplay();

    }//GEN-LAST:event_userrefreshtableActionPerformed

    private void jButton10ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton10ActionPerformed
   ACCOUNT__CLOUD AC = new ACCOUNT__CLOUD();
   if(AC.restoreFilesFromS3()){
       int c = JOptionPane.showConfirmDialog(null, "Do you realy want to restore, all unbackuped data will be lost", "RESTORE", JOptionPane.OK_CANCEL_OPTION);
       if(c==0 && AC.restoreMSQLDatabase()){
           JOptionPane.showMessageDialog(null, "suceesfull restore");
           this.revalidate();
           this.repaint();
       }else{
           JOptionPane.showMessageDialog(null, "failed to restore");
       }
   }else{
           JOptionPane.showMessageDialog(null, "failed to restore");
       }
    }//GEN-LAST:event_jButton10ActionPerformed

    private void jButton11ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton11ActionPerformed
        ACCOUNT__CLOUD ac = new ACCOUNT__CLOUD();
        String username = usert1.getText();
        String pswd  = usert2.getText();
        int access = acessstate;
        
        if(ac.ADDUSER(username, pswd, access)){
            JOptionPane.showMessageDialog(null, "sucess");
            addusers.setDefaultCloseOperation(HIDE_ON_CLOSE);
             accounttableDisplay();
        }else{
           JOptionPane.showMessageDialog(null, "fail"); 
        }
        addusers.setDefaultCloseOperation(HIDE_ON_CLOSE);
        ac.close();
        
        
        
    }//GEN-LAST:event_jButton11ActionPerformed

    private void fullaccessItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_fullaccessItemStateChanged
        acessstate=0;
        if (evt.getStateChange() == ItemEvent.SELECTED) {
           acessstate = 1; // Show the password
        }        // TODO add your handling code here:
        
    }//GEN-LAST:event_fullaccessItemStateChanged

    private void deleteuserActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteuserActionPerformed
      ACCOUNT__CLOUD ac = new ACCOUNT__CLOUD();
        int selectedRow = accounttable.getSelectedRow();
            if (selectedRow == -1) {
                    // No row is selected, display an error message
                JOptionPane.showMessageDialog(this, "Please select a record to delete.", "Error", JOptionPane.ERROR_MESSAGE);
            }else {
                                      
                int id = (int) accounttable.getValueAt(selectedRow, 0);
                int showConfirmDialog = JOptionPane.showConfirmDialog(null, "DO you really want to delete", "Confirm Delete", JOptionPane.YES_NO_OPTION);
                System.out.println(showConfirmDialog);     
                if(showConfirmDialog==0){
                            ac.Delete(id);
                        System.out.println("sucesful delete");
                        accounttableDisplay(); 
                     }
                   
            }
    }//GEN-LAST:event_deleteuserActionPerformed

    private void updateuserActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updateuserActionPerformed
       ACCOUNT__CLOUD ac = new ACCOUNT__CLOUD();
        int selectedRow = accounttable.getSelectedRow();
        System.out.println(selectedRow);
            if (selectedRow == -1) {
                    // No row is selected, display an error message
                JOptionPane.showMessageDialog(this, "Please select a record to delete.", "Error", JOptionPane.ERROR_MESSAGE);
            }else {
                modifyusers.setVisible(true);
                modifyusers.setLocationRelativeTo(null);
                usert3.setText((String) accounttable.getValueAt(selectedRow, 1));
                usert4.setText((String) accounttable.getValueAt(selectedRow, 2));
                int access = (int) accounttable.getValueAt(selectedRow, 3);
                if(access == 1){
                    fullaccess1.setSelected(true);
                }
                
                
            }
 
    }//GEN-LAST:event_updateuserActionPerformed

    private void jButton12ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton12ActionPerformed
       ACCOUNT__CLOUD ac = new ACCOUNT__CLOUD();
        int selectedRow = accounttable.getSelectedRow();
        int id = (int) accounttable.getValueAt(selectedRow, 0);
                String username = usert3.getText();
                String pswd  = usert4.getText();
                int acs = acessstate;
        
        if(ac.updateusers(username, pswd, acs,id)){
            JOptionPane.showMessageDialog(null, "sucess");
            addusers.setDefaultCloseOperation(HIDE_ON_CLOSE);
             accounttableDisplay();
        }else{
           JOptionPane.showMessageDialog(null, "fail"); 
        }
                
                 modifyusers.setDefaultCloseOperation(HIDE_ON_CLOSE);
                 ac.close();
    }//GEN-LAST:event_jButton12ActionPerformed

    private void fullaccess1ItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_fullaccess1ItemStateChanged
      acessstate=0;
        if (evt.getStateChange() == ItemEvent.SELECTED) {
           acessstate = 1; // Show the password
        }        // TODO add your handling code here:
        
    }//GEN-LAST:event_fullaccess1ItemStateChanged

    private void logoutbtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_logoutbtnActionPerformed
        // TODO add your handling code here:
        this.dispose();
        LOGIN L = new LOGIN();
        L.setVisible(true);
    }//GEN-LAST:event_logoutbtnActionPerformed

    private void jButton9ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton9ActionPerformed
 
        ACCOUNT__CLOUD AC = new ACCOUNT__CLOUD();
        if(AC.backupMySQLDatabase()){
        AC.uploadData();
        JOptionPane.showMessageDialog(rootPane, "sucessfull backingup");
        }
    }//GEN-LAST:event_jButton9ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
   MySQLDataDeletion dd = new MySQLDataDeletion();
   dd.run();
    }//GEN-LAST:event_jButton3ActionPerformed
 
    public final void EX_DisplayExportTable(){
        EXPORTDBM db = new EXPORTDBM();  
        ResultSet rs= db.getTableData();
        DefaultTableModel model = (DefaultTableModel) exporttb.getModel();
        model.setRowCount(0);
                try {
                    while (rs.next()) {
                        // Retrieve the desired columns from the ResultSet
                        long goodid = rs.getLong("pro_id");
                        String nature = rs.getString("nature");
                        int quantity = rs.getInt("quantity");
                        int weight  = rs.getInt("weight");
                        String description = rs.getString("Description");
                        Date invoicedate = rs.getDate("invoice_date");
                        Date arrivaldate = rs.getDate("arrival_date");
                        Date deliverydate = rs.getDate("delivery_date");
                        //String means = rs.getString("trans_means");
                        String folderName =  rs.getString("folder_name");
                        long amount = rs.getLong("amount");
                        long customerid = rs.getLong("customer.customer_id");
                        String customername=rs.getString("customer.name");
                        String customeraddress = rs.getString("customer.address");
                        String customersex = rs.getString("customer.sex");
                        String recname = rs.getString("reciever_name");
                        String recaddress = rs.getString("reciever_address");
                        String recsex = rs.getString("reciever_sex");
                        long transid = rs.getLong("transport_agency.LTA_BL");
                        String transagency = rs.getString("transport_agency.name");
                        
                        Date shippingdate = rs.getDate("transport_agency.shipping_date");
                        String jorneyid = rs.getString("flight_vehicle_num");
                        String country = rs.getString("destination_country");
                        String town = rs.getString("destination_town");
                        String means = rs.getString("means");
                        
                           
                        //Add a new row with the retrieved column values
                        model.addRow(new Object[]{goodid,nature,quantity,weight,description,invoicedate,shippingdate,customerid,customername,customeraddress,customersex,recname,recaddress,recsex,means,transagency,transid,jorneyid,arrivaldate,deliverydate,country,town,folderName,amount});
                        
                        }
                } 
                catch (SQLException e) {
                    e.printStackTrace();
                }finally{
            db.close();
                }
      }
    
    public final void IM_DisplayExportTable(){
        
        IMPORTDBM db = new IMPORTDBM();  
        ResultSet rs= db.getTableData();
        DefaultTableModel model = (DefaultTableModel) importtb.getModel();
        model.setRowCount(0);
                try {
                    while (rs.next()) {
                        // Retrieve the desired columns from the ResultSet
                        long goodid = rs.getLong("pro_id");
                        String nature = rs.getString("nature");
                        int quantity = rs.getInt("quantity");
                        int weight  = rs.getInt("weight");
                        String description = rs.getString("Description");
                        Date invoicedate = rs.getDate("invoice_date");
                        Date arrivaldate = rs.getDate("arrival_date");
                        Date deliverydate = rs.getDate("delivery_date");
                        //String means = rs.getString("trans_means");
                        String folderName =  rs.getString("folder_name");
                        long amount = rs.getLong("amount");
                        long customerid = rs.getLong("customer.customer_id");
                        String customername=rs.getString("customer.name");
                        String customeraddress = rs.getString("customer.address");
                        String customersex = rs.getString("customer.sex");
                        String recname = rs.getString("reciever_name");
                        String recaddress = rs.getString("reciever_address");
                        String recsex = rs.getString("reciever_sex");
                        long transid = rs.getLong("transport_agency.LTA_BL");
                        String transagency = rs.getString("transport_agency.name");
                        
                        Date shippingdate = rs.getDate("transport_agency.shipping_date");
                        String jorneyid = rs.getString("flight_vehicle_num");
                        String country = rs.getString("destination_country");
                        String town = rs.getString("destination_town");
                        String means = rs.getString("means");
                        
                           
                        //Add a new row with the retrieved column values
                        model.addRow(new Object[]{goodid,nature,quantity,weight,description,invoicedate,shippingdate,customerid,customername,customeraddress,customersex,recname,recaddress,recsex,means,transagency,transid,jorneyid,arrivaldate,deliverydate,country,town,folderName,amount});
                        System.out.println("succes");
                        }
                } catch (SQLException e) {
                    e.printStackTrace();
                }finally{
            db.close();
                }
      }
    
    private void ReportPieChart(JPanel pane, JTable table ) {
        
        DefaultCategoryDataset dataset = new DefaultCategoryDataset();

        // Extract data from JTable
        for (int row = 0; row < table.getRowCount(); row++) {
            double value = Double.parseDouble(table.getValueAt(row, 0).toString());
            String category = table.getValueAt(row, 1).toString();
            
            dataset.addValue(value, "Data", category);
        }

        // Create bar chart
        JFreeChart chart = ChartFactory.createBarChart(
                "Bar Chart for january", // chart title
                "Category",                 // domain axis label
                "Value",                    // range axis label
                dataset);                   // data


        // Create a ChartPanel to hold the chart
        ChartPanel chartPanel = new ChartPanel(chart);
        chartPanel.setPreferredSize(new Dimension(895, 490));

        // Add the ChartPanel to the jPanel1
        pane.setLayout(new BorderLayout());
        pane.add(chartPanel);
        pane.repaint();
        pane.revalidate();
    }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) throws UnsupportedLookAndFeelException {
       UIManager.setLookAndFeel(new FlatLightLaf());
        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new startup().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JDialog Displayreport;
    private javax.swing.JButton Displayreportbtn;
    private javax.swing.JButton EX_deletebtn;
    public javax.swing.JButton EX_editrowbtn;
    private javax.swing.JButton EX_existsearch;
    private javax.swing.JButton EX_exportdbbtn;
    private javax.swing.JButton EX_importdbbtn;
    private javax.swing.JPanel EX_mainbg;
    private javax.swing.JPanel EX_searchbg;
    private javax.swing.JButton EX_searchbtn;
    private javax.swing.JButton EX_searchbtn1;
    private javax.swing.JPanel EX_sortpane;
    private javax.swing.JPanel EX_tablebg;
    private javax.swing.JPanel EX_toolbox;
    private javax.swing.JPanel Exportpane;
    private javax.swing.JButton IM_editrowbtn;
    private javax.swing.JButton IM_existsearch;
    private javax.swing.JButton IM_exportdbbtn;
    private javax.swing.JButton IM_importdbbtn;
    private javax.swing.JPanel IM_mainbg;
    private javax.swing.JPanel IM_searchbg;
    private javax.swing.JButton IM_searchbtn;
    private javax.swing.JButton IM_sortbtn;
    private javax.swing.JPanel IM_sortpane;
    private javax.swing.JPanel IM_tablebg;
    private javax.swing.JPanel IM_toolbox;
    private javax.swing.JPanel Importpane;
    private javax.swing.JPanel Reportpane;
    public javax.swing.JMenu accountbtn;
    private javax.swing.JTable accounttable;
    private javax.swing.JButton addexports;
    private javax.swing.JButton addimports;
    private javax.swing.JButton adduser;
    private javax.swing.JFrame addusers;
    public javax.swing.JMenu adminstatus;
    private javax.swing.JPanel bgPanel;
    private javax.swing.JButton deleteuser;
    private com.toedter.calendar.JMonthChooser exMonthChooser2;
    private javax.swing.JPanel exportchartpane;
    private javax.swing.JScrollPane exportdb;
    private javax.swing.JComboBox<String> exportreportyear2;
    private javax.swing.JTable exporttb;
    private javax.swing.JPanel exreportpane;
    private javax.swing.JTable exreporttable;
    private javax.swing.JCheckBox fullaccess;
    private javax.swing.JCheckBox fullaccess1;
    private javax.swing.JButton fullaccessbtn;
    private javax.swing.JScrollPane importdb;
    private javax.swing.JComboBox<String> importreportyear;
    private javax.swing.JTable importtb;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton10;
    private javax.swing.JButton jButton11;
    private javax.swing.JButton jButton12;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton9;
    private javax.swing.JComboBox<String> jComboBox1;
    private javax.swing.JComboBox<String> jComboBox2;
    private javax.swing.JComboBox<String> jComboBox3;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JTabbedPane jTabbedPane2;
    private javax.swing.JTable jTable1;
    private javax.swing.JTextField jTextField2;
    private javax.swing.JMenuItem logoutbtn;
    private javax.swing.JFrame manageaccount;
    private javax.swing.JMenuItem manageaccountbtn;
    private javax.swing.JFrame modifyusers;
    private javax.swing.JButton revokeacessbtn;
    private javax.swing.JTextField searchtf1;
    private javax.swing.JButton selectreporttodisplay;
    private javax.swing.JTabbedPane startupTabbedPane;
    private javax.swing.JLabel swapimagelabel;
    private javax.swing.JButton updateuser;
    private javax.swing.JButton userrefreshtable;
    private javax.swing.JTextField usert1;
    private javax.swing.JTextField usert2;
    private javax.swing.JTextField usert3;
    private javax.swing.JTextField usert4;
    // End of variables declaration//GEN-END:variables

 public void fitshowimage(JLabel label, String path){
        ImageIcon icon = new ImageIcon(path); 
        Image image = icon.getImage();
        Image scaledImage = image.getScaledInstance(bgPanel.getWidth(), bgPanel.getHeight(), Image.SCALE_SMOOTH);
        ImageIcon scaledIcon = new ImageIcon(scaledImage);
        label.setIcon(scaledIcon);
    }   

public JTable getexporttb(){
    return exporttb;
}
private void accounttableDisplay(){
    ACCOUNT__CLOUD db = new ACCOUNT__CLOUD();  
        ResultSet rs= db.getTableData();
        DefaultTableModel model = (DefaultTableModel) accounttable.getModel();
        model.setRowCount(0);
                try {
                    while (rs.next()) {
                        // Retrieve the desired columns from the ResultSet
                        int id = rs.getInt(1);
                        String name = rs.getString(2);
                        String pswd = rs.getString(3);
                        int access = rs.getInt(4);
                                               
                           
                        //Add a new row with the retrieved column values
                        model.addRow(new Object[]{id,name,pswd,access});
                        System.out.println("succes");
                        }
                } catch (SQLException e) {
                    e.printStackTrace();
                }finally{
                    db.close();
                }
      }
public void admins(){
if(adminstatus.getText()=="ADMIN"){
EX_editrowbtn.setEnabled(true);
EX_deletebtn.setEnabled(true);
EX_toolbox.repaint();
}

}
}