/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package finaldefenseproject01;

import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.ItemEvent;
import java.net.URL;
import java.sql.*;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.ImageIcon;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.Timer;
/**
 *
 * @author SENGOUA NATHAN
 */
public class LOGIN extends javax.swing.JFrame {
    private ImageIcon[] images;
    private int currentIndex;
    private String username;
    public int accessLevel;

    /**
     * Creates new form LOGIN
     */
    public LOGIN() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        bgd = new javax.swing.JPanel();
        left = new javax.swing.JPanel();
        jLabel5 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        log_usr = new javax.swing.JTextField();
        log_pswd = new javax.swing.JPasswordField();
        showPasswordCheckbox = new javax.swing.JCheckBox();
        login_submit = new javax.swing.JButton();
        cancelbtn = new javax.swing.JButton();
        register = new javax.swing.JLabel();
        images = new ImageIcon[4];
        images[0] = createImageIcon("/icons/pic1.jpg");
        images[1] = createImageIcon("/icons/pic2.jpg");
        images[2] = createImageIcon("/icons/pic3.jpg");
        images[3] = createImageIcon("/icons/pic4.jpg");
        pic = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setName("loginframe"); // NOI18N
        setUndecorated(true);
        setResizable(false);

        bgd.setBackground(new java.awt.Color(255, 255, 255));
        bgd.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 51, 255), 1, true));

        left.setBackground(new java.awt.Color(255, 255, 255));
        left.setPreferredSize(new java.awt.Dimension(410, 480));

        jLabel5.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/mtalogo.jpg"))); // NOI18N

        jLabel1.setBackground(new java.awt.Color(255, 255, 255));
        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(18, 0, 163));
        jLabel1.setText("LOGIN");

        log_usr.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 51, 255)), "USERNAME", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Times New Roman", 0, 14), new java.awt.Color(0, 51, 255))); // NOI18N

        log_pswd.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 51, 255)), "PASSWORD", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Times New Roman", 0, 14), new java.awt.Color(0, 51, 255))); // NOI18N
        log_pswd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                log_pswdActionPerformed(evt);
            }
        });

        showPasswordCheckbox.setText("show password");
        showPasswordCheckbox.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                showPasswordCheckboxItemStateChanged(evt);
            }
        });
        showPasswordCheckbox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                showPasswordCheckboxActionPerformed(evt);
            }
        });

        login_submit.setBackground(new java.awt.Color(0, 204, 255));
        login_submit.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        login_submit.setForeground(new java.awt.Color(255, 255, 255));
        login_submit.setText("LOGIN");
        login_submit.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 51, 255), 1, true));
        login_submit.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                login_submitMouseClicked(evt);
            }
        });
        login_submit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                login_submitActionPerformed(evt);
            }
        });

        cancelbtn.setBackground(new java.awt.Color(0, 204, 255));
        cancelbtn.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        cancelbtn.setForeground(new java.awt.Color(255, 255, 255));
        cancelbtn.setText("CANCEL");
        cancelbtn.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 51, 255), 1, true));
        cancelbtn.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                cancelbtnMouseClicked(evt);
            }
        });
        cancelbtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancelbtnActionPerformed(evt);
            }
        });

        register.setText("I don't have an acoont");
        register.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 1, 0, new java.awt.Color(0, 0, 0)));
        register.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                registerMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                registerMouseExited(evt);
            }
        });

        javax.swing.GroupLayout leftLayout = new javax.swing.GroupLayout(left);
        left.setLayout(leftLayout);
        leftLayout.setHorizontalGroup(
            leftLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(leftLayout.createSequentialGroup()
                .addGap(86, 86, 86)
                .addComponent(jLabel5)
                .addGap(0, 0, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, leftLayout.createSequentialGroup()
                .addContainerGap(65, Short.MAX_VALUE)
                .addGroup(leftLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, leftLayout.createSequentialGroup()
                        .addGroup(leftLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addGroup(leftLayout.createSequentialGroup()
                                .addComponent(login_submit, javax.swing.GroupLayout.PREFERRED_SIZE, 142, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(cancelbtn, javax.swing.GroupLayout.PREFERRED_SIZE, 142, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(log_pswd)
                            .addComponent(log_usr))
                        .addGap(55, 55, 55))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, leftLayout.createSequentialGroup()
                        .addComponent(showPasswordCheckbox)
                        .addGap(241, 241, 241))))
            .addGroup(leftLayout.createSequentialGroup()
                .addGroup(leftLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(leftLayout.createSequentialGroup()
                        .addGap(166, 166, 166)
                        .addComponent(jLabel1))
                    .addGroup(leftLayout.createSequentialGroup()
                        .addGap(146, 146, 146)
                        .addComponent(register)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        leftLayout.setVerticalGroup(
            leftLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(leftLayout.createSequentialGroup()
                .addGap(31, 31, 31)
                .addComponent(jLabel5)
                .addGap(18, 18, 18)
                .addComponent(jLabel1)
                .addGap(18, 18, 18)
                .addComponent(log_usr, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(log_pswd, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(showPasswordCheckbox, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(leftLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(cancelbtn, javax.swing.GroupLayout.DEFAULT_SIZE, 39, Short.MAX_VALUE)
                    .addComponent(login_submit, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(register)
                .addGap(18, 18, 18))
        );

        startImageSwapping();
        pic.setBackground(new java.awt.Color(0, 204, 255));
        others o = new others();
        o.fitImageToLable(pic);
        pic.setForeground(new java.awt.Color(0, 204, 255));
        pic.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        pic.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/mtalogo.jpg"))); // NOI18N
        pic.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 51, 255)));
        pic.setIconTextGap(8);
        pic.setPreferredSize(new java.awt.Dimension(456, 482));

        javax.swing.GroupLayout bgdLayout = new javax.swing.GroupLayout(bgd);
        bgd.setLayout(bgdLayout);
        bgdLayout.setHorizontalGroup(
            bgdLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(bgdLayout.createSequentialGroup()
                .addComponent(pic, javax.swing.GroupLayout.PREFERRED_SIZE, 456, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(left, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0))
        );
        bgdLayout.setVerticalGroup(
            bgdLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(left, javax.swing.GroupLayout.DEFAULT_SIZE, 482, Short.MAX_VALUE)
            .addComponent(pic, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(bgd, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(bgd, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void log_pswdActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_log_pswdActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_log_pswdActionPerformed

    private void showPasswordCheckboxItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_showPasswordCheckboxItemStateChanged
        // TODO add your handling code here:
        if (evt.getStateChange() == ItemEvent.SELECTED) {
            log_pswd.setEchoChar((char) 0); // Show the password
        } else {
            log_pswd.setEchoChar('\u2022'); // Hide the password with bullet character
        }
    }//GEN-LAST:event_showPasswordCheckboxItemStateChanged

    private void login_submitMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_login_submitMouseClicked
       username = log_usr.getText();
       System.out.println("ser"+username);
    String password = new String(log_pswd.getPassword());

    // Check if username or password is empty
    if (username.isEmpty() || password.isEmpty()) {
        JOptionPane.showMessageDialog(LOGIN.this, "Please enter both username and password.", "Error", JOptionPane.ERROR_MESSAGE);
        return;
    }
    EXPORTDBM DB = new EXPORTDBM();
    try {
        ResultSet user = DB.exportlogin(username, password);
        
        if (user != null && user.next()) {
            String storedUsername = user.getString("usename");
            String storedPassword = user.getString("password");
            accessLevel = user.getInt("access");

            if (username.equals(storedUsername) && password.equals(storedPassword)) {
                JOptionPane.showMessageDialog(null, "Login successful! Welcome " + username);
                setVisible(false);
                
                startup startupframe = new startup();
                
                startupframe.setVisible(true);
                startupframe.accountbtn.setText(username);
                if (accessLevel == 1) {
                    startupframe.adminstatus.setText("ADMIN");
                }
                startupframe.setExtendedState(JFrame.MAXIMIZED_BOTH);
            } else {
                JOptionPane.showMessageDialog(LOGIN.this, "Invalid password. Please try again.", "Error", JOptionPane.ERROR_MESSAGE);
            }
        } else {
            JOptionPane.showMessageDialog(LOGIN.this, "Invalid username. Please try again.", "Error", JOptionPane.ERROR_MESSAGE);
        }
    } catch (SQLException ex) {
        Logger.getLogger(LOGIN.class.getName()).log(Level.SEVERE, null, ex);
        JOptionPane.showMessageDialog(LOGIN.this, "An error occurred. Please try again later.", "Error", JOptionPane.ERROR_MESSAGE);
    }
    }//GEN-LAST:event_login_submitMouseClicked

    private void cancelbtnMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_cancelbtnMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_cancelbtnMouseClicked

    private void cancelbtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancelbtnActionPerformed
    dispose();        // TODO add your handling code here:
    }//GEN-LAST:event_cancelbtnActionPerformed

    private void login_submitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_login_submitActionPerformed
        username = log_usr.getText();
       System.out.println("ser"+username);
    String password = new String(log_pswd.getPassword());

    // Check if username or password is empty
    if (username.isEmpty() || password.isEmpty()) {
        JOptionPane.showMessageDialog(LOGIN.this, "Please enter both username and password.", "Error", JOptionPane.ERROR_MESSAGE);
        return;
    }
    EXPORTDBM DB = new EXPORTDBM();
    try{
        ResultSet user = DB.exportlogin(username, password);
        
        if (user != null && user.next()){
            String storedUsername = user.getString("usename");
            String storedPassword = user.getString("password");
            accessLevel = user.getInt("access");

                if(username.equals(storedUsername)){
                    if(password.equals(storedPassword)) {
                    JOptionPane.showMessageDialog(null, "Login successful! Welcome " + username);
                    setVisible(false);

                    startup startupframe = new startup();

                    startupframe.setVisible(true);
                    startupframe.accountbtn.setText(username);
                    if (accessLevel == 1) {
                    startupframe.adminstatus.setText("ADMIN");
                    startupframe.admins();
                    }else{
                        startupframe.adminstatus.setText(null);
                    }
                    startupframe.setExtendedState(JFrame.MAXIMIZED_BOTH);
                } else {
                    JOptionPane.showMessageDialog(LOGIN.this, "Invalid password. Please try again.", "Error", JOptionPane.ERROR_MESSAGE);
                }
                }else {
            JOptionPane.showMessageDialog(LOGIN.this, "Invalid username. Please try again.", "Error", JOptionPane.ERROR_MESSAGE);
                }
            }
    }catch (SQLException ex) {
        Logger.getLogger(LOGIN.class.getName()).log(Level.SEVERE, null, ex);
        JOptionPane.showMessageDialog(LOGIN.this, "An error occurred. Please try again later.", "Error", JOptionPane.ERROR_MESSAGE);
    }
    }//GEN-LAST:event_login_submitActionPerformed

    private void showPasswordCheckboxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_showPasswordCheckboxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_showPasswordCheckboxActionPerformed

    private void registerMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_registerMouseEntered
        // TODO add your handling code here:
         register.setForeground(new java.awt.Color(0, 51, 255));
        register.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 1, 0, new java.awt.Color(0, 51, 255)));
    }//GEN-LAST:event_registerMouseEntered

    private void registerMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_registerMouseExited
        // TODO add your handling code here:
        register.setForeground(new java.awt.Color(0, 0, 0));
        register.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 1, 0, new java.awt.Color(0, 0, 0)));
    }//GEN-LAST:event_registerMouseExited
    
    private ImageIcon createImageIcon(String path) {
        URL imgURL = getClass().getResource(path);
        if (imgURL != null) {
            return new ImageIcon(imgURL);
        } else {
            System.err.println("Couldn't find file: " + path);
            return null;
        }
    }
    private void startImageSwapping() {
        Timer timer = new Timer(4000, new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                currentIndex = (currentIndex + 1) % images.length;
                pic.setIcon(images[currentIndex]);
                new others().fitImageToLable(pic);
            }
        });
        timer.start();
    }
    /**
     * @param args the command line arguments
     */
  

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel bgd;
    private javax.swing.JButton cancelbtn;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JPanel left;
    private javax.swing.JPasswordField log_pswd;
    private javax.swing.JTextField log_usr;
    private javax.swing.JButton login_submit;
    private javax.swing.JLabel pic;
    private javax.swing.JLabel register;
    private javax.swing.JCheckBox showPasswordCheckbox;
    // End of variables declaration//GEN-END:variables
}
